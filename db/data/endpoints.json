{
  "endpoints": {
    "GET /api/": {
      "description": "serves this JSON object, a list of endpoints and HTTP methods used to interact with them",
      "queries": [],
      "status": 200
    },
    "GET /api/posts/": {
      "description": "serves an array of blog_post entries",
      "queries": [
        {
          "key": "sort_by",
          "values": [
            "created_at", "updated_at", "votes", "comment_count", "username"
          ],
          "description": "sorts the served array by the given column"
        },
        {
          "key": "order_by",
          "values": [
            "ASC", "DESC"
          ],
          "description": "orders the served array ascending or descending"
        }
      ],
      "status": 200,
      "example response": {
        "blog_posts": [
          {
            "blog_post_id": 1,
            "user_id": 1,
            "body": "Development is going smoothly!",
            "created_at": "2023-02-18T14:03:52+00:00",
            "updated_at": "2023-02-18T14:03:52+00:00",
            "votes": 5,
            "username": "stormytuna",
            "comment_count": 2
          },
          { "...": "..." }
        ]
      },
      "notes": []
    },
    "GET /api/posts/<int:blog_post_id>/": {
      "description": "serves the blog_post entry with the given blog_post_id",
      "queries": [],
      "status": 200,
      "example response": {
        "blog_post": {
          "blog_post_id": 1,
          "user_id": 1,
          "body": "Development is going smoothly!",
          "created_at": "2023-02-18T14:03:52+00:00",
          "updated_at": "2023-02-18T14:03:52+00:00",
          "votes": 5,
          "username": "stormytuna",
          "comment_count": 2
        }
      },
      "possible errors": [
        "404: blog_post with the given blog_post_id does not exist"
      ],
      "notes": []
    },
    "GET /api/users/<int:user_id>/posts": {
      "description": "serves an array of blog_post entries owned by the user with the given user_id",
      "queries": [],
      "status": 200,
      "example response": {
        "blog_posts": [
          {
            "blog_post_id": 1,
            "user_id": 1,
            "body": "Development is going smoothly!",
            "created_at": "2023-02-18T14:03:52+00:00",
            "updated_at": "2023-02-18T14:03:52+00:00",
            "votes": 5,
            "username": "stormytuna",
            "comment_count": 2
          },
          { "...": "..." }
        ]
      },
      "possible errors": [
        "404: user with the given user_id does not exist"
      ],
      "notes": [
        "This will serve an empty array if the given user hasn't made any posts"
      ]
    },
    "GET /api/posts/<int:blog_post_id>/comments/": {
      "description": "servers an array of all comments on the given blog_post entry",
      "queries": [],
      "status": 200,
      "example response": {
        "comments": [
          {
            "comment_id": 2,
            "parent_comment_id": 1,
            "blog_post_id": 1,
            "user_id": 1,
            "body": "Thank you very much :DDDD",
            "created_at": "2023-02-18T14:03:52+00:00",
            "updated_at": "2023-02-18T14:03:52+00:00",
            "votes": 1,
            "username": "stormytuna"
          },
          { "...": "..." }
        ]
      },
      "possible errors": [
        "404: blog_post with the given blog_post_id does not exist"
      ],
      "notes": [
        "This will serve an empty array if no comments exist on the given blog post",
        "parent_comment_id can be null or an integer. null means this comment has no parent, it is just a reply to the blog post and not another comment on that blog post"
      ]
    },
    "POST /api/posts/": {
      "description": "takes a blog_post JSON object and serves the created blog_post entry",
      "example request": {
        "user_id": 1,
        "body": "Development is going smoothly!"
      },
      "status": 201,
      "example response": {
        "blog_post": {
          "blog_post_id": 1,
          "user_id": 1,
          "body": "Development is going smoothly!",
          "created_at": "2023-02-18T14:03:52+00:00",
          "updated_at": "2023-02-18T14:03:52+00:00",
          "votes": 5,
          "username": "stormytuna",
          "comment_count": 2
        }
      },
      "possible errors": [
        "404: user with the given user_id does not exist",
        "400: 'user_id' is not an integer or 'body' is not a string",
        "400: 'user_id' or 'body' do not exist on the sent JSON object"
      ],
      "notes": []
    },
    "POST /api/posts/<int:blog_post_id>/comments/": {
      "description": "takes a comment JSON objectm and serves the created comment entry",
      "example request": {
        "body": "What an insightful post :D",
        "parent_comment_id": null,
        "user_id": 2
      },
      "status": 201,
      "example response": {
        "comment": {
          "comment_id": 3,
          "parent_comment_id": null,
          "blog_post_id": 1,
          "user_id": 2,
          "body": "What an insightful post :D",
          "created_at": "2023-02-21 00:12:01.707963+00",
          "updated_at": "2023-02-21 00:12:01.707963+00",
          "votes": 0
        }
      },
      "possible errors": [
        "404: blog_post with the given blog_post_id does not exist",
        "400: 'body' is not a string, 'parent_comment_id' is not an integer or null or 'user_id' is not an integer",
        "400: 'body', 'parent_comment_id' or 'user_id' do not exist on the sent JSON object"
      ],
      "notes": [
        "parent_comment_id can be null or an integer. null means this comment has no parent, it is just a reply to the blog post and not another comment on that blog post"
      ]
    },
    "PATCH /api/posts/<int:blog_post_id>/votes/": {
      "description": "takes a votes JSON object, adds it to the votes of the given blog_post entry and serves the updated blog_post entry",
      "example request": {
        "vote_increment": 1
      },
      "status": 200,
      "example repsonse": {
        "blog_post": {
          "blog_post_id": 1,
          "user_id": 1,
          "body": "Development is going smoothly!",
          "created_at": "2023-02-18T14:03:52+00:00",
          "updated_at": "2023-02-18T14:03:52+00:00",
          "votes": 6,
          "username": "stormytuna",
          "comment_count": 2
        }
      },
      "possible errors": [
        "404: blog_post with the given blog_post_id does not exist",
        "400: 'vote_increment' is not an integer",
        "400: 'vote_increment' does not exist on the sent JSON object"
      ],
      "notes": []
    },
    "PATCH /api/posts/<int:blog_post_id>/": {
      "description": "takes a blog_post JSON object, replaces the body with the given body and serves the updated blog_post entry",
      "example request": {
        "body": "Something something Game of Thrones good"
      },
      "status": 200,
      "example response": {
        "blog_post": {
          "blog_post_id": 1,
          "user_id": 1,
          "body": "Something something Game of Thrones good",
          "created_at": "2023-02-18T14:03:52+00:00",
          "updated_at": "2023-02-19T14:19:40+00:00",
          "votes": 5,
          "username": "stormytuna",
          "comment_count": 2
        }
      },
      "possible errors": [
        "404: blog_post with the given blog_post_id does not exist",
        "400: 'body' does not exist on the sent JSON object"
      ],
      "notes": [
        "This will update the updated_at column of the given blog_post entry to the current date and time"
      ]
    },
    "PATCH /api/comments/<int:comment_id>/": {
      "description": "takes a comment JSON object, replaces the body with the given body and serves the updated comment entry",
      "example request": {
        "body": "I agree, Game of Thrones is great!"
      },
      "status": 200,
      "example response": {
        "comment": {
          "comment_id": 1,
          "parent_comment_id": null,
          "blog_post_id": 1,
          "user_id": 2,
          "body": "I agree, Game of Thrones is great!",
          "created_at": "2023-02-18T14:03:52+00:00",
          "updated_at": "2023-02-21 01:00:07.091125+00",
          "votes": 1
        }
      },
      "possible errors": [
        "404: comment with the given comment_id does not exist",
        "400: 'body' does not exist on the sent JSON object"
      ],
      "notes": [
        "This will update the updated_at column of the given comment entry to the current date and time"
      ]
    },
    "PATCH /api/comments/<int:comment_id>/votes/": {
      "description": "takes a votes JSON object, adds it to the votes of the given comments entry and serves the updated comments entry",
      "example request": {
        "vote_increment": 1
      },
      "status": 200,
      "example response": {
        "comment": {
          "comment_id": 1,
          "parent_comment_id": null,
          "blog_post_id": 1,
          "user_id": 2,
          "body": "Glad to hear it :D",
          "created_at": "2023-02-18T14:03:52+00:00",
          "updated_at": "2023-02-18T14:03:52+00:00",
          "votes": 3
        }
      },
      "possible errors": [
        "404: comment with the given comment_id does not exist",
        "400: 'vote_increment' is not an integer",
        "400: 'vote_increment' does not exist on the sent JSON object"
      ],
      "notes": []
    },
    "DELETE /api/posts/<int:blog_post_id>/": {
      "description": "deletes the blog_post entry with the given blog_post_id",
      "status": 204,
      "possible errors": [
        "404: blog_post with the given blog_post_id does not exist"
      ],
      "notes": []
    }
  }
}